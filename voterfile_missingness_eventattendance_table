/*Generate a table with all event attendees from Every Action, our volunteer database where all event information is synced
to and updated in, and connect people to their record in the voterfile.

This table only connects the voterfile fields if it is the latest voterfile match (where a voterbase id may be matched to
different person ids over time as we get more info on people) but keeps all van ids from Every Action.

This table is structured to eliminate duplicate van ids, which is why there are so many CTEs.

In the final select, fields that begin with 'ap_' are from the Activist Pool, fields that begin with 'vb_' are from the
voterbase.*/


DROP TABLE IF EXISTS coc_reporting.eventattendance_voterfile;
CREATE TABLE coc_reporting.eventattendance_voterfile AS


/* Bring in all event attendees from Every Action, filtering for only people who where an Attendee and Completed their shift.
Includes date_rank field to dedup the date of a persons first event, to get their join date.
*/
WITH ea AS (
SELECT 
  coc_eventsignups.vanid
  , LEFT (coc_eventshifts.datetimeoffsetbegin, CHARINDEX(' ', coc_events.dateoffsetbegin) -1) AS join_date
      /* ^For the join date, using the shift time rather than event time. One event may have multiple shifts on 
      different days. The shift time is more accurate for the time the member actually attended an event. */
      -- ^Reformats to only include the date, not time of event
  , ROW_NUMBER () OVER (PARTITION BY coc_eventsignups.vanid ORDER BY join_date ASC NULLS LAST) AS date_rank
    /* ^Field to rank each person by the different dates they attended events on. Will be deduping below for 
    first event per person. */

FROM tmc_van.coc_events
LEFT JOIN tmc_van.coc_eventsignups
	ON coc_events.eventid = coc_eventsignups.eventid
LEFT JOIN tmc_van.coc_eventsignupsstatuses
 	ON coc_eventsignups.eventsignupid = coc_eventsignupsstatuses.eventsignupid
LEFT JOIN tmc_van.coc_eventshifts
  ON coc_eventsignups.eventshiftid = coc_eventshifts.eventshiftid

WHERE
	coc_eventsignups.eventrolename = 'Attendee'
    -- ^Filter for 'Attendee' only, as opposed to Host or Host Committee.
  AND coc_eventsignupsstatuses.eventstatusname = 'Completed'
    /* ^Filter to only count event sign ups were the contact was labeled as Completed. Otherwise, would include 
    all statuses, including Scheduled and No-Show etc. */
  AND coc_events.eventname NOT LIKE '%Cancelled%'
    /* ^Filter out cancelled events. I don't believe there is a field in EA for when an event is cancelled. 
    However, this will at least remove events where the event name includes 'Cancelled'. */
)


/*Connect van ids from Every Action to the person id and voterbase id in the Activist Pool. One voterbase id may have been 
matched to 300+ person ids. Therefore, I will not be deduping person ids by voterbase ids. Instead, in the ap_clean 
CTE below I flag the most recent voterbase id match for joining to the voterfile. */
, ap_base AS (
SELECT
  ea.*
  , coc_person_fields.person_id
  , coc_identities.voterbase_id
  , coc_identities.updated_at AS identities_updated_at -- For marking latest voterabse id match below.
FROM ea
LEFT JOIN tmc_activist_pool.coc_person_fields
  ON coc_person_fields.primary_key = ea.vanid
  AND coc_person_fields.vendor = 'every_action'
LEFT JOIN tmc_activist_pool.coc_identities
  ON coc_identities.person_id = ap.person_id
WHERE date_rank = 1 -- Dedup join_date from ea CTE above.
)


/*Bring in email address. Includes rank_emails field to dedup on latest email match in CTE below.*/
, ap_email AS (
SELECT
  ap_base.*
  , coc_emails.email
  , ROW_NUMBER () OVER (PARTITION BY ap_base.vanid ORDER BY coc_emails.updated_at DESC) AS rank_emails
FROM ap_base
LEFT JOIN tmc_activist_pool.coc_emails
  ON coc_emails.person_id = ap_base.person_id
)


/*Bring in phone. Includes rank_phones field to dedup on latest phone match in CTE below.*/
, ap_phone AS (
SELECT
  ap_email.*
  , coc_phones.phone_number
  , ROW_NUMBER () OVER (PARTITION BY ap_email.vanid ORDER BY coc_phones.updated_at DESC) AS rank_phones
FROM ap_email
LEFT JOIN tmc_activist_pool.coc_phones
  ON coc_phones.person_id = ap_email.person_id
WHERE rank_emails = 1 -- Dedup emails from ap_email CTE above.
)


/*Bring in address. Includes rank_eaddresses field to dedup on latest phone match in CTE below.*/
, ap_address AS (
SELECT
  ap_phone.*
  , coc_addresses.address1
  , coc_addresses.address2
  , coc_addresses.city
  , coc_addresses.state
  , coc_addresses.zip_code
  , ROW_NUMBER () OVER (PARTITION BY ap_phone.vanid ORDER BY coc_addresses.updated_at DESC) AS rank_addresses
FROM ap_phone
LEFT JOIN tmc_activist_pool.coc_addresses
  ON coc_addresses.person_id = ap_phone.person_id
WHERE rank_phones = 1 -- Dedup phones from ap_phone CTE above.
)



/*Selecting final fields that I want from the Activist Pool and renaming. Includes latest_voterbase_id_match , 
which flags the most recent voterbase match. I will use this in the vf CTE, bringing in voterfile information,
as a filter. */
, ap_clean AS(
SELECT
  vanid AS van_id
  , person_id
  , voterbase_id
    /* I will NOT be using a CTE in this query to filter for only the most recently matched voterbase_id. This is 
  because TMC can match hundreds of person_ids to a single voterbase_id, and I do not want to lose the data for 
  those hundreds of people. INSTEAD, any Selects that are joining  to the voterfile should filter for the 
  latest voterbase_id, to only include one record for each person in the voter file (rather than potentially 
  having 300 records of the same person). */
  , CASE WHEN voterbase_id IS NOT NULL THEN (ROW_NUMBER () OVER (PARTITION BY voterbase_id 
        ORDER BY NVL(identities_updated_at, NULL) DESC NULLS LAST))
      ELSE NULL
      END AS latest_voterbase_match 
      -- ^ Formatting as a CASE WHEN so that all null values are kept, instead of being collapsed into one.
  , join_date AS van_join_date
  , email AS ap_email
  , phone_number AS ap_phone
  , address1 AS ap_address1
  , address2 AS ap_address2
  , city AS ap_city
  , state AS ap_state
  , zip_code AS ap_zip
FROM ap_address
WHERE rank_addresses = 1 -- Dedup addresses from ap_address CTE above.
)


/*Joining to the voterfile. Bringing in desired fields and renaming.
The van_id is included for most accurate joining in the final select.*/
, vf AS(
SELECT
  van_id
  , voterbase_id
  , tmc_landline_phone AS vb_phone_landline
  , tmc_cell_phone AS vb_phone_cell
  , vb_tsmart_full_address AS vb_address
  , vb_tsmart_city AS vb_city
  , vb_tsmart_state AS vb_state
  , vb_tsmart_zip AS vb_zip
  , vb_voterbase_age AS vb_age
  , vb_voterbase_gender AS vb_gender
  , vb_voterbase_race AS vb_race
  , vb_vf_party AS vb_party
FROM ap_clean
INNER JOIN ts.ntl_current
	ON ntl_current.vb_voterbase_id = ap_clean.voterbase_id
	AND latest_voterbase_match = 1
	  /* ^ Filtering to only match to latest matched voterbase_id from the Activist Pool. 
	  This is because one voterbase_id may be matched to hundreds of person_ids. */
)
  


/*All final fields that I want. Joining fields from the Activist Pool to the voterfile.*/
SELECT
  ap_clean.*
  , vb_phone_landline
  , vb_phone_cell
  , vb_address
  , vb_city
  , vb_state
  , vb_zip
  , vb_age
  , vb_gender
  , vb_race
  , vb_party
FROM ap_clean
LEFT JOIN vf
  ON vf.van_id = ap_clean.van_id
  AND vf.voterbase_id = ap_clean.voterbase_id
  AND ap_clean.latest_voterbase_match = 1
  
;

-- Grant access:
GRANT SELECT ON coc_reporting.eventattendance_voterfile TO GROUP coc;
GRANT ALL ON coc_reporting.eventattendance_voterfile TO jharris1;
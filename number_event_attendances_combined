-- * Count the number of event attendances from Every Action and Mobilize. However, this is different from the number of unique attendees. Retain fields for filtering in Sisense. *

-- Every Action base table: https://platform.civisanalytics.com/spa/#/scripts/sql/100953079
-- Mobilize base table: https://platform.civisanalytics.com/spa/#/scripts/sql/101066205


WITH base AS (
SELECT
-- Where there are two versions of a field, I am selecting EA first. This is because Mob events stop syncing to EA 24 hours after the event occurs. Therefore, we encourage staff to update events in EA and view that data as more up-to-date. Where there is no EA field I use a Mob field OR use a Null function (NVL) to pull from the EA table first, then the Mob table.
	NVL (ea_eventid::varchar, mob_shiftid) AS event_id
  , NVL (ea_date, mob_date::varchar) AS date
  , NVL (ea_eventname, mob_eventname) AS event_name
  , NVL (ea_eventtype, mob_eventtype) AS event_type
	, NVL (ea_eventstate, mob_eventstate) AS event_state
  , mob_eventowner AS event_owner
  , COUNT (NVL(ea_attendeesid, mob_userid)) AS count_attendees
      -- Since this query's purpose is to count attendances, not unique attendees, I am NOT counting by distinct. This way, it will count if the same member attended multiple events.

FROM coc_reporting.ea_eventattendance

FULL OUTER JOIN coc_reporting.mob_eventattendance
	ON mob_eventattendance.mob_vaneventid = ea_eventattendance.ea_eventid
  AND mob_eventattendance.mob_vanuserid = ea_eventattendance.ea_attendeesid
  -- ^Full Outer Join, since this will includes all records from EA and Mob. This accounts for if there is an event in one platform but not the other.
  
GROUP BY 1,2,3,4,5,6
  -- Group by event id first. The rest doesn't matter.
)


SELECT
  SUM (count_attendees)
FROM base

-- These lines for filtering in Sisense. !De-comment in Sisense!
--WHERE [event_state=State]
--  AND [event_type=Event_Type]
--  AND [event_owner=Event_Owner]
-- Are people who are confirmed a certain number of days before the event more likely to attend?
/* Based on the first date someone is marked as Confirmed or Conf Twice for an event before the event date. 
People who were not confirmed before the event date are marked as NULL. */

WITH t_confirmed AS (
SELECT DISTINCT
  event_id
  , event_shiftid
  , vanid
  , status_datecreated
  , ROW_NUMBER () OVER (PARTITION BY event_id, event_shiftid, vanid ORDER BY status_datecreated ASC) AS rank_datecreated
  -- I am ranking the results by the first time a Confirmed status was created for each event and person. 
FROM coc_reporting.ea_eventsignups
WHERE attendee_status IN ('Confirmed', 'Conf Twice')
)

/* For each event and person, I am removing duplicates and keeping the first time a person was confirmed. */
, t_confirmed_dedup AS (
SELECT *
FROM t_confirmed
WHERE rank_datecreated = 1
)

, t_completes AS (
SELECT DISTINCT
  event_id
  , event_shiftid
  , vanid
  , attendee_status AS completed_status
FROM coc_reporting.ea_eventsignups
WHERE attendee_status = 'Completed'
)


, t_base AS (
SELECT DISTINCT
    event_id
  , event_shiftid
  , event_type
  , event_shiftdate
  , vanid
FROM coc_reporting.ea_eventsignups
WHERE event_id = 750055740
 -- ^ For testing
)


, t_combine AS(
SELECT
  t_base.event_id
  , t_base.event_shiftid
  , t_base.event_type
  , t_base.vanid
  , completed_status
  , t_base.event_shiftdate
  , t_confirmed_dedup.status_datecreated AS confirmed_date
  , DATEDIFF(day, TO_DATE(confirmed_date, 'YYYY-MM-DD'), TO_DATE(event_shiftdate, 'YYYY-MM-DD')) AS date_difference
  , CASE WHEN date_difference >= 0 THEN date_difference
      ELSE NULL
      END AS date_difference_clean
    /* ^ In the results I'm seeing that sometimes people are marked as Confirmed for an event AFTER the event date and the 
    date difference is negative. In those cases, I am formatting to consider them as NULL, aka never scheduled.*/
FROM t_base
LEFT JOIN t_confirmed_dedup
  ON t_base.event_id = t_confirmed_dedup.event_id
  AND t_base.event_shiftid = t_confirmed_dedup.event_shiftid
  AND t_base.vanid = t_confirmed_dedup.vanid
LEFT JOIN t_completes
  ON t_base.event_id = t_completes.event_id
  AND t_base.event_shiftid = t_completes.event_shiftid
  AND t_base.vanid = t_completes.vanid
)

/* For each person and the difference between Confirmed date and event date, calculate the show rate as 
the # of people completed / # of people scheduled. */
, t_calculate AS (
SELECT
  event_type
  , event_id
  , event_shiftid
  , date_difference_clean
  , COUNT(vanid) AS count_scheduled
  , COUNT(completed_status) AS count_completed
  , count_completed*100::decimal(10,2)/count_scheduled AS show_rate
    -- ^ Show rate is the number of people Completed divided by number of people Scheduled for the event.
FROM t_combine
GROUP BY 1,2,3,4
)


SELECT
  event_type
  , date_difference_clean
  , AVG(show_rate) AS avg_show_rate
FROM t_calculate
GROUP BY 1,2
HAVING avg_show_rate > 0
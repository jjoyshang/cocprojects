-- Are people who are signed up a certain number of days before the event more likely to attend?
/* Based on the first date someone is marked as Scheduled, Sched-Web, or Invited for an event before the event date. 
People who were not scheduled before the event date are marked as NULL. */

/* For every person marked as Scheduled for an event, what date were they scheduled? */
WITH t_scheduled AS (
SELECT DISTINCT
  event_id
  , event_shiftid
  , vanid
  , status_datecreated
  , ROW_NUMBER () OVER (PARTITION BY event_id, event_shiftid, vanid ORDER BY status_datecreated ASC) AS rank_datecreated
  -- I am ranking the results by the first time a Scheduled status was created for each event and person. 
FROM coc_reporting.ea_eventsignups
WHERE attendee_status IN ('Scheduled', 'Sched-Web', 'Invited')
)

/* For each event and person, I am removing duplicates and keeping the first time a person was scheduled. */
, t_scheduled_dedup AS (
SELECT *
FROM t_scheduled
WHERE rank_datecreated = 1
)

/* For every event, this CTE gets the vanid of people who were marked as Completed and flags them with completed_status. */
, t_completes AS (
SELECT DISTINCT
  event_id
  , event_shiftid
  , vanid
  , attendee_status AS completed_status
FROM coc_reporting.ea_eventsignups
WHERE attendee_status = 'Completed'
)

/* Join all CTEs, using t_base as the base with all people and events and joining columns for how people were scheduled and 
whether they were completed. This allows me to include people who were never Scheduled or Completed. */
, t_base AS (
SELECT DISTINCT
    event_id
  , event_shiftid
  , event_type
  , event_shiftdate
  , vanid
FROM coc_reporting.ea_eventsignups
--WHERE event_id = 750055740
 -- ^ For testing
)

/* Join all CTEs, using t_base as the base with all people and events and joining columns for how people were scheduled and 
whether they were completed. */
, t_combine AS(
SELECT
  t_base.event_id
  , t_base.event_shiftid
  , t_base.event_type
  , t_base.vanid
  , completed_status
  , t_base.event_shiftdate
  , t_scheduled_dedup.status_datecreated AS signup_date
  , DATEDIFF(day, TO_DATE(signup_date, 'YYYY-MM-DD'), TO_DATE(event_shiftdate, 'YYYY-MM-DD')) AS date_difference
  , CASE WHEN date_difference >= 0 THEN date_difference
      ELSE NULL
      END AS date_difference_clean
    /* ^ In the results I'm seeing that sometimes people are marked as Scheduled for an event AFTER the event date and the 
    date difference is negative. In those cases, I am formatting to consider them as NULL, aka never scheduled.*/
FROM t_base
LEFT JOIN t_scheduled_dedup
  ON t_base.event_id = t_scheduled_dedup.event_id
  AND t_base.event_shiftid = t_scheduled_dedup.event_shiftid
  AND t_base.vanid = t_scheduled_dedup.vanid
LEFT JOIN t_completes
  ON t_base.event_id = t_completes.event_id
  AND t_base.event_shiftid = t_completes.event_shiftid
  AND t_base.vanid = t_completes.vanid
)

/* For each person and the difference between Scheduled date and event date, calculate the show rate as 
the # of people completed / # of people scheduled. */
, t_calculate AS (
SELECT
  event_type
  , event_id
  , event_shiftid
  , date_difference_clean
  , COUNT(vanid) AS count_scheduled
  , COUNT(completed_status) AS count_completed
  , count_completed*100::decimal(10,2)/count_scheduled AS show_rate
    -- ^ Show rate is the number of people Completed divided by number of people Scheduled for the event.
FROM t_combine
GROUP BY 1,2,3,4
)


SELECT
  event_type
  , date_difference_clean
  , AVG(show_rate) AS avg_show_rate
FROM t_calculate
GROUP BY 1,2